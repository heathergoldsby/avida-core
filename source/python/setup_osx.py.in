"""
Script for building AvidaEd.app.

Usage: 
    python setup.py py2app
"""

from distutils.core import setup
import py2app
import site

# Hack :
#
# py2app usually ignores cvs and svn metadata directories, but we want
# to keep svn metadata (so that our programmers can hack on Avida-ED.app
# python code without rebuilding from the source tree, but can still
# commit their changes). The variable to change is py2app.util.SCMDIRS,
# which usually reads ['CVS', '.svn'].
# 
#py2app.util.SCMDIRS=['CVS']

# Hack, similar to above in purpose, for an earlier version of py2app.
#
#def do_not_skip_scm(ofn):
#  return True
#py2app.util.skipscm = do_not_skip_scm

# Tell Python where to find Avida and Avida-ED python modules and packages.
avida_ed_python_basedir = '${CMAKE_CURRENT_SOURCE_DIR}'
site.addsitedir(avida_ed_python_basedir)
site.addsitedir('${LIBRARY_OUTPUT_PATH}')

setup(  
  # Python startup script
  app=['Avida-ED.py'],
  # Options for distutils
  options = dict(
    # Options for py2app
    py2app = dict(
      # Python modules to copy :
      includes = ['iqt', 'sip', 'qt', 'qwt', 'readline', 'unittest', 'IPython', 'AvidaGui2', 'AvidaCore'],
      # Python packages to copy :
      packages = ['IPython', 'AvidaGui2'],
      # Additional frameworks and dylibs to include
      #frameworks = ['libqt-mt.3.dylib'],
      # Subdirectory in which Avi :da-ED.app should be assembled
      dist_dir = '${EXECUTABLE_OUTPUT_PATH}',
      # Extra files and folders to  :copy into Resources subdirectory
      resources = [
        '${CMAKE_CURRENT_SOURCE_DIR}/AvidaGui2/avidalogo.png',
        '${CMAKE_CURRENT_SOURCE_DIR}/AvidaGui2/avida-ED-logo.png',
        '${CMAKE_CURRENT_SOURCE_DIR}/AvidaGui2/open.png',
        '${CMAKE_CURRENT_SOURCE_DIR}/AvidaGui2/closed.png',
        '${CMAKE_CURRENT_SOURCE_DIR}/default.workspace',
      ],
      # Strip symbols from libraries.
      #strip = True,
      # Generate a file named Avida-ED.dot containing dependency graphs.
      #graph = True,
    )
  ),
)
