//////////////////////////////////////////////////////////////////////////////
// Copyright (C) 1993 - 2000 California Institute of Technology             //
//                                                                          //
// Read the COPYING and README files, or contact 'avida@alife.org',         //
// before continuing.  SOME RESTRICTIONS MAY APPLY TO USE OF THIS FILE.     //
//////////////////////////////////////////////////////////////////////////////
// generated by Fast Light User Interface Designer (fluid) version 1.00

#include "cDialogWindow.hh"

inline void cDialogWindow::cb_Close_i(Fl_Button*, void*) {
  close_dialog = true;
dialog_window->hide();
}
void cDialogWindow::cb_Close(Fl_Button* o, void* v) {
  ((cDialogWindow*)(o->parent()->user_data()))->cb_Close_i(o,v);
}

cDialogWindow::cDialogWindow(const char * label, const char * mesg) {
  Fl_Window* w;
  { Fl_Window* o = dialog_window = new Fl_Window(304, 186);
    w = o;
    o->user_data((void*)(this));
    { Fl_Output* o = dialog_text = new Fl_Output(10, 25, 285, 125, "foo");
      o->type(4);
      o->box(FL_ENGRAVED_BOX);
      o->color(50);
      o->labeltype(FL_ENGRAVED_LABEL);
      o->align(133);
    }
    { Fl_Button* o = new Fl_Button(225, 155, 75, 25, "Close");
      o->color(50);
      o->callback((Fl_Callback*)cb_Close);
    }
    o->end();
  }
  close_dialog =false;
  dialog_window->label(label);
  dialog_text->label(label);
  dialog_text->value(mesg);
  dialog_window->show();
}

cDialogWindow::~cDialogWindow() {
  dialog_window->hide();
  Fl::wait(0.025);
}

void cDialogWindow::Block() {
  while( close_dialog == false && Fl::wait() );
}
