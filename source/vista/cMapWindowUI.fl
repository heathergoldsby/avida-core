# data file for the Fltk User Interface Designer (fluid)
version 1.00 
header_name {.hh} 
code_name {.cc} 
gridx 5 
gridy 5 
snap 3
decl {\#include <iostream.h>} {} 

decl {\#include <Fl/fl_ask.h>} {} 

decl {\#include "vista_main.hh"} {} 

decl {\#include "map_mode_enum.hh"} {} 

class cMapWindowUI {open
} {
  decl {int mode;} {public
  }
  Function {cMapWindowUI(int x_size, int y_size)} {open
  } {
    code {mode = MAP_MODE_THRESHOLD;} {}
    Fl_Window map_window {
      label Map
      callback {vista_main->CloseMapWindow();} open
      xywh {875 465 701 498} visible
    } {
      Fl_Button {} {
        label {&Close}
        callback {vista_main->CloseMapWindow();}
        xywh {525 470 70 25}
      }
      Fl_Value_Slider zoom_slider {
        label Zoom
        callback {legend->SetCellSize(((Fl_Slider*)o)->value() );}
        xywh {150 470 230 20} type Horizontal align 4 minimum 1 maximum 20 step 1 value 5
      }
      Fl_Group pan_group {open
        xywh {0 220 245 225} align 22
      } {
        Fl_Roller {} {
          label Y
          callback {if(  ((Fl_Roller*)o)->value() >= 1 )
 ((Fl_Roller*)o)->value( ((Fl_Roller*)o)->value()-1 );
if(  ((Fl_Roller*)o)->value() < 0 )
 ((Fl_Roller*)o)->value( ((Fl_Roller*)o)->value()+1 );
grid->SetY0( ((Fl_Roller*)o)->value() *grid->GetRows() );
center_label->value(grid->GetOriginString());}
          xywh {10 220 20 170} minimum -0.9 maximum 1.9 step 0.005
        }
        Fl_Roller {} {
          label X
          callback {if(  ((Fl_Roller*)o)->value() >= 1 )
 ((Fl_Roller*)o)->value( ((Fl_Roller*)o)->value()-1 );
if(  ((Fl_Roller*)o)->value() < 0 )
 ((Fl_Roller*)o)->value( ((Fl_Roller*)o)->value()+1 );
grid->SetX0( ((Fl_Roller*)o)->value() *grid->GetRows() );
center_label->value(grid->GetOriginString());}
          xywh {65 415 180 20} type Horizontal align 4 minimum -0.9 maximum 1.9 step 0.005
        }
        Fl_Output center_label {
          xywh {5 415 40 20} box FLAT_BOX color 49 labeltype NO_LABEL
        }
      }
      Fl_Group {} {
        label Mode
        private xywh {490 20 100 100}
      } {
        Fl_Light_Button {} {
          label {&Threshold}
          callback {mode = MAP_MODE_THRESHOLD;
vista_main->SetupMap(MAP_MODE_THRESHOLD);}
          private xywh {490 20 95 25} type Radio value 1
        }
        Fl_Light_Button {} {
          label {&Birth}
          callback {mode = MAP_MODE_BIRTH;
vista_main->SetupMap(MAP_MODE_BIRTH);}
          private xywh {490 45 95 25} type Radio
        }
        Fl_Light_Button {} {
          label {&Genotype}
          callback {mode = MAP_MODE_GENOTYPE;
vista_main->SetupMap(MAP_MODE_GENOTYPE);}
          private xywh {490 70 95 25} type Radio
        }
      }
      Fl_Group {} {
        label Legend open
        private xywh {465 130 200 280} box ENGRAVED_BOX
        code0 {\#include <Fl/Fl_Scroll.h>}
        class Fl_Scroll
      } {
        Fl_Box legend {
          xywh {470 135 160 270} labeltype NO_LABEL align 1
          code0 {\#include "legend.hh"}
          class cLegend
        }
      }
      Fl_Light_Button pause_button {
        label {&Pause}
        callback {vista_main->TogglePauseState();}
        xywh {5 470 70 25} selection_color 1
      }
      Fl_Box {} {
        xywh {40 5 415 405} box ENGRAVED_FRAME
      }
      Fl_Box grid {
        xywh {40 5 415 405}
        code0 {\#include "grid.hh"}
        class cGrid
      }
    }
    code {grid->SetupSize(x_size, y_size, legend);} {}
    code {pause_button->value(vista_main->GetPauseState());} {}
    code {show();} {selected
    }
  }
  Function {show()} {open
  } {
    code {map_window->show();} {}
    code {grid->show();} {}
    code {legend->show();} {}
  }
  Function {~cMapWindowUI()} {open
  } {
    code {map_window->hide();} {}
    code {Fl::wait(0.025);} {}
  }
} 
