//////////////////////////////////////////////////////////////////////////////
// Copyright (C) 1993 - 2000 California Institute of Technology             //
//                                                                          //
// Read the COPYING and README files, or contact 'avida@alife.org',         //
// before continuing.  SOME RESTRICTIONS MAY APPLY TO USE OF THIS FILE.     //
//////////////////////////////////////////////////////////////////////////////
// Inline includes for tools.hh

inline void cFlags::SetFlag(int flag_num)
{
#ifdef DEBUG
  if (flag_num < 0) g_debug.Error("Flag index must not be negative!");
  if (flag_num >= 32) g_debug.Error("Flag index must not be < 32!");
#endif
  flags |= 1 << flag_num;
}

inline void cFlags::UnsetFlag(int flag_num)
{
  flags &= ~(1 << flag_num);
}

inline void cFlags::FlipFlag(int flag_num)
{
  flags ^= 1 << flag_num;
}

inline int cFlags::GetFlag(int flag_num) const
{
  return flags & (1 << flag_num);
}

inline int cFlags::operator[](int flag_num) const
{
#ifdef DEBUG
  if (flag_num < 0) g_debug.Error("Flag index must not be negative!");
  if (flag_num >= 32) g_debug.Error("Flag index must not be < 32!");
#endif
  return (flags & (1 << flag_num)) ? TRUE : FALSE;
}

inline void cFlags::operator()(int flag_num, int value)
{
  if (value) SetFlag(flag_num);
  else UnsetFlag(flag_num);
}

inline void cFlags::Clear()
{
  flags = 0;
}





