
cString = Class("cString", "cString.h")

# Pyste doesn't grok varargs. @kgn
exclude(cString.Set)
# Pyste doesn't grok istream or ostream. @kgn
exclude(cString.operator['<<'])
exclude(cString.operator['>>'])
# These operators take const char *, which Pyste wants to convert to
# const char &, which doesn't work; but Python provides their
# equivalents, I think. @kgn
exclude(cString.operator['=='])
exclude(cString.operator['!='])
exclude(cString.operator['<'])
exclude(cString.operator['>'])
exclude(cString.operator['<='])
exclude(cString.operator['>='])

set_policy(cString.Insert, return_self())
set_policy(cString.Clip, return_self())
set_policy(cString.ClipEnd, return_self())
set_policy(cString.ClipFront, return_self())
set_policy(cString.ToLower, return_self())
set_policy(cString.ToUpper, return_self())

# vim: set ft=python:
