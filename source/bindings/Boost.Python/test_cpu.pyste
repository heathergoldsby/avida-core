
Include("cCPUTestInfo.h")
Include("cEnvironment.h")
Include("cGenome.h")
Include("cInstSet.h")
Include("cOrganism.h")
Include("cPopulationInterface.h")
Include("cResourceCount.h")

cTestCPU = Class("cTestCPU", "test_cpu-fixups.hh")
set_policy(cTestCPU.GetInstSet, return_value_policy(reference_existing_object))
set_policy(cTestCPU.GetEnvironment, return_value_policy(reference_existing_object))
set_policy(cTestCPU.GetResources, return_value_policy(reference_existing_object))
set_policy(cTestCPU.GetResourceCount, return_value_policy(reference_existing_object))
set_policy(cTestCPU.SetupTestOrganism, return_value_policy(reference_existing_object))
exclude(cTestCPU.UseResources)

exclude(cTestCPU.UseResources)
add_method(cTestCPU, "cTestCPU_GetUseResources");
add_method(cTestCPU, "cTestCPU_SetUseResources");
rename(cTestCPU.cTestCPU_GetUseResources, "GetUseResources");
rename(cTestCPU.cTestCPU_SetUseResources, "SetUseResources");
class_code(cTestCPU, '.add_property("UseResources", &cTestCPU_GetUseResources, &cTestCPU_SetUseResources)');

print("""
XXX in test_cpu.pyste:
- cTestCPU.GetInstSet needs autopointer to protect ownership.
- cTestCPU.GetEnvironment needs autopointer to protect ownership.
- cTestCPU.GetResources needs autopointer to protect ownership.
- cTestCPU.GetResourceCount needs autopointer to protect ownership.
""")

# vim: set ft=python:
